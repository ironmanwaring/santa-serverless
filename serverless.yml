service:
  name: santaswap-api

plugins:
  - serverless-plugin-iopipe
  - serverless-webpack
  - serverless-plugin-iam-checker

provider:
  name: aws
  runtime: nodejs8.10
  stage: personal
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:DeleteItem
        - dynamodb:BatchGetItem
        - dynamodb:UpdateItem
      Resource:
        - { Fn::GetAtt: [GroupsTable, Arn] }
        - { Fn::Join: ['', [{ Fn::GetAtt: [GroupsTable, Arn] }, '/index/*']] }
        - { Fn::GetAtt: [UsersTable, Arn] }
        - { Fn::GetAtt: [InvitationsTable, Arn] }
  environment:
    IOPIPE_TOKEN: ${env:IOPIPE_TOKEN}
    IOPIPE_LOGGER_ENABLED: true
    GROUPS_TABLE: { Ref: GroupsTable }
    GROUPS_TABLE_TYPE_INDEX: TypeIndex
    USERS_TABLE: { Ref: UsersTable }
    INVITATIONS_TABLE: { Ref: InvitationsTable }

functions:
  createAndJoinGroup:
    handler: groups/create-and-join.handler
    events:
      - http:
          method: post
          path: users/{userId}/groups
          cors: true
          request:
            parameters:
              paths:
                userId: true

  joinGroup:
    handler: groups/join.handler
    events:
      - http:
          method: post
          path: groups/{groupId}/users/{userId}
          cors: true
          request:
            parameters:
              paths:
                userId: true
                groupId: true

  excludeUser:
    handler: groups/exclude-user.handler
    events:
      - http:
          method: post
          path: groups/{groupId}/users/{userId}/excludedUsers/{excludedUserId}
          cors: true
          request:
            parameters:
              paths:
                userId: true
                groupId: true
                excludedUserId: true

  getGroupsByUser:
    handler: groups/getByUser.handler
    events:
      - http:
          method: get
          path: users/{userId}/groups
          cors: true
          request:
            parameters:
              paths:
                userId: true

  createUser:
    handler: users/create.handler
    events:
      - http:
          method: post
          path: users
          cors: true

resources:
  Resources:
    InvitationsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: groupId
            AttributeType: S
          - AttributeName: invitationId
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: groupId
            KeyType: HASH
          - AttributeName: invitationId
            KeyType: RANGE

    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: userId
            KeyType: HASH

    GroupsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: groupId
            AttributeType: S
          - AttributeName: type
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: groupId
            KeyType: HASH
          - AttributeName: type
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: TypeIndex
            KeySchema:
              - AttributeName: type
                KeyType: HASH
            Projection:
              ProjectionType: ALL
